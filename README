# FanLabs GPT 🧠⚽️

A custom GPT-powered research and strategy assistant trained on the *Fans Have More Friends* project. Built for cultural strategists, insight teams, and brand thinkers who want sharp, sourced, and culturally fluent answers — fast.

---

## 🔍 What It Does

FanLabs GPT retrieves relevant excerpts from internal documents, then uses OpenAI’s GPT model to craft well-informed responses in a chosen tone of voice. It's like having a senior strategist, cultural critic, or historian in the room — powered by your own IP.

---

## ✨ Features

- **Tone Toggle** – Choose your assistant’s voice:
  - `Strategist` — Confident, clear, POV-driven  
  - `Provocateur` — Bold, spicy, sharp  
  - `Historian` — Sweeping, grounded, zoomed out  

- **Quote-level sourcing** – Pulls and formats the most relevant document excerpts, ranked by semantic score  
- **Clean prompt logic** – Builds rich, voice-aligned prompts with instructions and context baked in  
- **FAISS + OpenAI retrieval** – Fast, local semantic search with source-aware metadata  

---

## 🛠 Setup

### 1. Clone the Repo
```bash
git clone https://github.com/rxmance/fanlabs-gpt-fresh.git
cd fanlabs-gpt-fresh

2. Create Virtual Environment
bash

python3 -m venv venv
source venv/bin/activate

3. Install Dependencies
bash

pip install -r requirements.txt

4. Add Environment Variables
Create a .env file and include:

env

OPENAI_API_KEY=your-key
OPENAI_ORG_ID=your-org-id
OPENAI_PROJECT_ID=your-project-id

▶️ Run the App Locally
bash

streamlit run app.py

 📦 Embed New Documents
1. Add your .docx files to the dirty data/ folder
2. Then run:

bash

python scripts/combine_and_clean.py
python scripts/embed_combined_chunks.py

This will:

-Clean and chunk the data
-Save the updated fanlabs_vector_index.faiss and fanlabs_chunk_metadata.json

📁 Project Structure

fanlabs-gpt-fresh/
│
├── app.py                            # Streamlit frontend + main logic
├── utils/
│   ├── prompts.py                    # Tone-specific system prompts + prompt builder
│   ├── search.py                     # FAISS search wrapper
│   ├── faiss_helpers.py              # Load/save FAISS index and metadata
│   └── chunking.py                   # Text chunking logic
│
├── scripts/
│   ├── combine_and_clean.py         # Cleans + chunks documents
│   └── embed_combined_chunks.py     # Embeds chunks into FAISS index
│
├── dirty data/                       # Raw .docx files
├── output/                           # Cleaned and chunked .json output
├── fanlabs_vector_index.faiss       # Vector store
├── fanlabs_chunk_metadata.json      # Chunk metadata
└── README.md

🤝 Credits
Created by Chris Dennler
Strategy, code, writing, testing — all in-house.
Trained on the full Fans Have More Friends library.